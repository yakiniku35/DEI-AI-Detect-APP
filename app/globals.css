@tailwind base;
@tailwind components;
@tailwind utilities;

:root {
  --background: 248 248 248;
  --foreground: 23 23 23;
  --primary: 0 86 179;
  --primary-foreground: 255 255 255;
  --secondary: 173 216 230;
  --secondary-foreground: 0 0 0;
  --muted: 245 245 245;
  --muted-foreground: 115 115 115;
  --accent: 173 216 230;
  --accent-foreground: 0 0 0;
  --destructive: 239 68 68;
  --destructive-foreground: 255 255 255;
  --border: 229 229 229;
  --input: 229 229 229;
  --ring: 0 86 179;
  --radius: 0.5rem;
}

.dark {
  --background: 23 23 23;
  --foreground: 250 250 250;
  --primary: 0 86 179;
  --primary-foreground: 255 255 255;
  --secondary: 173 216 230;
  --secondary-foreground: 0 0 0;
  --muted: 38 38 38;
  --muted-foreground: 163 163 163;
  --accent: 173 216 230;
  --accent-foreground: 0 0 0;
  --destructive: 239 68 68;
  --destructive-foreground: 255 255 255;
  --border: 38 38 38;
  --input: 38 38 38;
  --ring: 0 86 179;
}

* {
  border-color: rgb(var(--border));
}

body {
  color: rgb(var(--foreground));
  background: rgb(var(--background));
  font-family: 'Inter', 'Noto Sans CJK TC', system-ui, sans-serif;
}

@layer base {
  /* Explicitly provide utility fallbacks so Tailwind's JIT missing class
     generation doesn't break builds on some CI environments. These map to
     the CSS variables defined above. */
  .border-border {
    border-color: rgb(var(--border));
  }

  .bg-background {
    background: rgb(var(--background));
  }

  .text-foreground {
    color: rgb(var(--foreground));
  }

  /* Apply the utilities to base elements where appropriate */
  * {
    box-sizing: border-box;
  }

  body {
    background: rgb(var(--background));
    color: rgb(var(--foreground));
  }
}

@layer components {
  .btn {
    @apply inline-flex items-center justify-center rounded-md text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-2 disabled:opacity-50 disabled:pointer-events-none;
    /* fallback ring utilities */
    --tw-ring-color: rgb(var(--ring));
    --tw-ring-offset-color: rgb(var(--background));
  }
  
  .btn-primary {
    @apply btn bg-primary text-primary-foreground hover:bg-primary/90;
  }
  
  .btn-secondary {
    @apply btn bg-secondary text-secondary-foreground hover:bg-secondary/80;
  }
  
  .btn-outline {
    @apply btn border border-input bg-background hover:bg-accent hover:text-accent-foreground;
  }
  
  .input {
    @apply flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50;
  }
  
  .card {
    @apply rounded-lg border bg-background text-foreground shadow-sm;
  }
  
  .highlight-violation {
    @apply bg-red-100 dark:bg-red-900/30 border-b-2 border-red-500 cursor-pointer transition-colors hover:bg-red-200 dark:hover:bg-red-900/50;
  }
  
  .highlight-suggestion {
    @apply bg-yellow-100 dark:bg-yellow-900/30 border-b-2 border-yellow-500 cursor-pointer transition-colors hover:bg-yellow-200 dark:hover:bg-yellow-900/50;
  }
}
